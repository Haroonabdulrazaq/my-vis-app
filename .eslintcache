[{"/home/haroon/my-vis-app/src/index.js":"1","/home/haroon/my-vis-app/src/App.js":"2","/home/haroon/my-vis-app/src/reportWebVitals.js":"3","/home/haroon/my-vis-app/src/component/Bar.js":"4","/home/haroon/my-vis-app/src/component/Area.js":"5","/home/haroon/my-vis-app/src/component/Line.js":"6","/home/haroon/my-vis-app/src/component/Example.js":"7","/home/haroon/my-vis-app/src/scatterplot.js":"8","/home/haroon/my-vis-app/src/hint-content.js":"9"},{"size":500,"mtime":1610103026338,"results":"10","hashOfConfig":"11"},{"size":1115,"mtime":1610978716689,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610009478447,"results":"13","hashOfConfig":"11"},{"size":645,"mtime":1610727552725,"results":"14","hashOfConfig":"11"},{"size":662,"mtime":1610465728954,"results":"15","hashOfConfig":"11"},{"size":607,"mtime":1610460541866,"results":"16","hashOfConfig":"11"},{"size":2485,"mtime":1610720911722,"results":"17","hashOfConfig":"11"},{"size":678,"mtime":1610979945197,"results":"18","hashOfConfig":"11"},{"size":747,"mtime":1610979288372,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3fpbu5",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/haroon/my-vis-app/src/index.js",[],"/home/haroon/my-vis-app/src/App.js",[],"/home/haroon/my-vis-app/src/reportWebVitals.js",[],"/home/haroon/my-vis-app/src/component/Bar.js",[],"/home/haroon/my-vis-app/src/component/Area.js",[],"/home/haroon/my-vis-app/src/component/Line.js",[],"/home/haroon/my-vis-app/src/component/Example.js",["39","40"],"import React from 'react';\n// import ShowcaseButton from '../showcase-components/showcase-button';\n\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  MarkSeries,\n  MarkSeriesCanvas,\n  Hint\n} from 'react-vis';\n\nfunction getRandomData() {\n  return new Array(100).fill(0).map(row => ({\n    x: Math.random() * 10,\n    y: Math.random() * 20,\n    size: Math.random() * 10,\n    color: Math.random() * 10,\n    opacity: Math.random() * 0.5 + 0.5\n  }));\n}\nconst colorRanges = {\n  typeA: ['#59E4EC', '#0D676C'],\n  typeB: ['#EFC1E3', '#B52F93']\n};\n\nconst randomData = getRandomData();\nconst nextType = {\n  typeA: 'typeB',\n  typeB: 'typeA'\n};\n\nconst nextModeContent = {\n  canvas: 'SWITCH TO SVG',\n  svg: 'SWITCH TO CANVAS'\n};\n\nconst drawModes = ['canvas', 'svg'];\n\nclass Example extends React.Component {\n  state = {\n    drawMode: 0,\n    data: randomData,\n    colorType: 'typeA',\n    value: false\n  };\n\n  render() {\n    const {drawMode, data, colorType} = this.state;\n    const markSeriesProps = {\n      animation: true,\n      className: 'mark-series-example',\n      sizeRange: [5, 15],\n      seriesId: 'my-example-scatterplot',\n      colorRange: colorRanges[colorType],\n      opacityType: 'literal',\n      data,\n      onNearestXY: value => this.setState({value})\n    };\n\n    const mode = drawModes[drawMode];\n    return (\n      <div className=\"canvas-wrapper\">\n        <div className=\"canvas-example-controls\">\n          <div>{`MODE: ${mode}`}</div>\n          {/* <ShowcaseButton\n            onClick={() => this.setState({drawMode: (drawMode + 1) % 2})}\n            buttonContent={nextModeContent[mode]}\n          />\n          <ShowcaseButton\n            onClick={() => this.setState({data: getRandomData()})}\n            buttonContent={'UPDATE DATA'}\n          />\n          <ShowcaseButton\n            onClick={() => this.setState({colorType: nextType[colorType]})}\n            buttonContent={'UPDATE COLOR'}\n          /> */}\n        </div>\n        <XYPlot\n          onMouseLeave={() => this.setState({value: false})}\n          width={600}\n          height={300}\n        >\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          {mode === 'canvas' && <MarkSeriesCanvas {...markSeriesProps} />}\n          {mode === 'svg' && <MarkSeries {...markSeriesProps} />}\n          {this.state.value ? <Hint value={this.state.value} /> : null}  \n        </XYPlot>\n      </div>\n    );\n  }\n}\n\nexport default  Example;","/home/haroon/my-vis-app/src/scatterplot.js",["41","42","43","44","45","46","47","48"],"/home/haroon/my-vis-app/src/hint-content.js",[],{"ruleId":"49","severity":1,"message":"50","line":30,"column":7,"nodeType":"51","messageId":"52","endLine":30,"endColumn":15},{"ruleId":"49","severity":1,"message":"53","line":35,"column":7,"nodeType":"51","messageId":"52","endLine":35,"endColumn":22},{"ruleId":"49","severity":1,"message":"54","line":3,"column":3,"nodeType":"51","messageId":"52","endLine":3,"endColumn":7},{"ruleId":"49","severity":1,"message":"55","line":3,"column":9,"nodeType":"51","messageId":"52","endLine":3,"endColumn":28},{"ruleId":"49","severity":1,"message":"56","line":3,"column":30,"nodeType":"51","messageId":"52","endLine":3,"endColumn":40},{"ruleId":"49","severity":1,"message":"57","line":4,"column":3,"nodeType":"51","messageId":"52","endLine":4,"endColumn":20},{"ruleId":"49","severity":1,"message":"58","line":4,"column":22,"nodeType":"51","messageId":"52","endLine":4,"endColumn":27},{"ruleId":"49","severity":1,"message":"59","line":4,"column":29,"nodeType":"51","messageId":"52","endLine":4,"endColumn":35},{"ruleId":"49","severity":1,"message":"60","line":4,"column":37,"nodeType":"51","messageId":"52","endLine":4,"endColumn":42},{"ruleId":"49","severity":1,"message":"61","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":19},"no-unused-vars","'nextType' is assigned a value but never used.","Identifier","unusedVar","'nextModeContent' is assigned a value but never used.","'Hint' is defined but never used.","'HorizontalGridLines' is defined but never used.","'MarkSeries' is defined but never used.","'VerticalGridLines' is defined but never used.","'XAxis' is defined but never used.","'XYPlot' is defined but never used.","'YAxis' is defined but never used.","'HintContent' is defined but never used."]